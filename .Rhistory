#vins=read.table(file='E:/TP_vins.csv', skip=0, header=TRUE, sep = ';')
#Quelques boxplot pour commencer
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
summary(vins)
(vins$total)
summary(vins$total)
summary(vins$nombre_declarations);summary(vins$superficie);summary(vins$total)
summary(vins)
boxplot(qte_cognac~region, data=vins)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
summary(res.acp)
plot(res.acp$eig$eigenvalue)
plot.PCA(res.acp,choix="var",1:2,col.hab=c("green","blue","red","yellow4","black","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"),lim.cos2.var = 0.7)
vinsacp=vins[,-22]
options(max.print = 99999999)
vins
summary(vins)
plot(vins[, 2:5])
boxplot(qte_cognac~region, data=vins)
boxplot(qte_aop_rouge~region, data=vins)
boxplot(qte_aop_blanc~region, data=vins)
boxplot(qte_aop_rose~region, data=vins)
boxplot(qte_vci~region, data=vins)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
plot(res.acp$eig$eigenvalue)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
#vins=read.table(file='E:/TP_vins.csv', skip=0, header=TRUE, sep = ';')
#Quelques boxplot pour commencer
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
install.packages("FactoMineR")
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
summary(res.acp)
plot(res.acp$eig$eigenvalue)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
summary(res.acp)
plot(res.acp$eig$eigenvalue)
summary(vins$nombre_declarations);summary(vins$superficie);summary(vins$total)
vins
summary(vins)
plot(vins[, 2:5])
boxplot(qte_cognac~region, data=vins)
boxplot(qte_aop_rouge~region, data=vins)
boxplot(qte_aop_blanc~region, data=vins)
boxplot(qte_aop_rose~region, data=vins)
boxplot(qte_vci~region, data=vins)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
summary(res.acp)
plot(res.acp$eig$eigenvalue)
plot.PCA(res.acp,choix="var",1:2,col.hab=c("green","blue","red","yellow4","black","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"),lim.cos2.var = 0.7)
plot.PCA(res.acp,choix="ind",1:2,col.hab=c("green","blue","red","yellow4","aquamarine","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"))
plot.PCA(res.acp,choix="ind",1:2,col.hab=c("green","blue","red","yellow4","aquamarine","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"))
vinsacp=vins[,-22]
options(max.print = 99999999)
vins
summary(vins)
plot(vins[, 2:5])
boxplot(qte_cognac~region, data=vins)
boxplot(qte_aop_rouge~region, data=vins)
boxplot(qte_aop_blanc~region, data=vins)
boxplot(qte_aop_rose~region, data=vins)
boxplot(qte_vci~region, data=vins)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
summary(res.acp)
plot(res.acp$eig$eigenvalue)
plot.PCA(res.acp,choix="var",1:2,col.hab=c("green","blue","red","yellow4","black","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"),lim.cos2.var = 0.7)
plot.PCA(res.acp,choix="ind",1:2,col.hab=c("green","blue","red","yellow4","aquamarine","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"))
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
summary(vins$nombre_declarations);summary(vins$superficie);summary(vins$total)
vins2<-vins[c(1:80),]
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
res.acp=PCA(vins2,scale.unit = TRUE,ncp=3)
vinsacp=vins[,-22]
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vins2,scale.unit = TRUE,ncp=3)
vinsacp=vins[,-22]
options(max.print = 99999999)
vins
summary(vins)
plot(vins[, 2:5])
boxplot(qte_cognac~region, data=vins)
boxplot(qte_aop_rouge~region, data=vins)
boxplot(qte_aop_blanc~region, data=vins)
boxplot(qte_aop_rose~region, data=vins)
boxplot(qte_vci~region, data=vins)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
summary(res.acp)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
summary(vins$nombre_declarations);summary(vins$superficie);summary(vins$total)
vins2<-vins[c(1:80),]
vinsacp=vins[,-22]
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vins2,scale.unit = TRUE,ncp=3)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vins2,scale.unit = TRUE,ncp=3)
str(vins)
str(vins)
str(vins)
summary(vins)
vinsacp=vins[,-22]
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vins2,scale.unit = TRUE,ncp=3)
#vins=read.table(file='E:/TP_vins.csv', skip=0, header=TRUE, sep = ';')
#Quelques boxplot pour commencer
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
vins_appel=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins_par_appelations.csv', skip=0, header=TRUE, sep = ';')
vins_appel
str(vins)
summary(vins)
summary(vins$nombre_declarations);summary(vins$superficie);summary(vins$total)
vinsacp=vins[,-22]
options(max.print = 99999999)
vins
summary(vins)
plot(vins[, 2:5])
boxplot(qte_cognac~region, data=vins)
boxplot(qte_aop_rouge~region, data=vins)
boxplot(qte_aop_blanc~region, data=vins)
boxplot(qte_aop_rose~region, data=vins)
boxplot(qte_vci~region, data=vins)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
res.pca=PCA(vinsacp,scale.unit=TRUE,graph=FALSE,quali.sup=13)
plot(res.pca,cex=0.75,cex.lab=0.75,cex.axis=0.75)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
install.packages("missMDA")
#ACP sur les données
library(FactoMineR)
res.acp=imputePCA(vinsacp,scale.unit = TRUE,ncp=3)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
#vins=read.table(file='E:/TP_vins.csv', skip=0, header=TRUE, sep = ';')
#Quelques boxplot pour commencer
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
vinsacp=vins[,-22]
vinsacp=vins[-81,-22]
#ACP sur les données
library(FactoMineR)
res.pca=PCA(vinsacp,scale.unit=TRUE,graph=FALSE,quali.sup=13)
plot(res.pca,cex=0.75,cex.lab=0.75,cex.axis=0.75)
plot(res.pca,cex=0.75,cex.lab=0.75,cex.axis=0.75)
plot.PCA
plot.PCA(res.acp,choix="var",1:2,col.hab=c("green","blue","red","yellow4","black","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"),lim.cos2.var = 0.7)
plot.PCA(res.acp,choix="ind",1:2,col.hab=c("green","blue","red","yellow4","aquamarine","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"))
plot.PCA(res.acp,choix="var",1:2,col.hab=c("green","blue","red","yellow4","black","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"),lim.cos2.var = 0.7)
#ACP sur les données
library(FactoMineR)
res.acp=PCA(vinsacp,scale.unit = TRUE,ncp=3)
vinsacp=vins[-80:81,-22]
vinsac=vins[-81,-22]
vinsacp=vinsac[-80;]
vinsacp=vinsac[-80,]
#ACP sur les données
library(FactoMineR)
res.pca=PCA(vinsacp,scale.unit=TRUE,graph=FALSE,quali.sup=13)
plot(res.pca,cex=0.75,cex.lab=0.75,cex.axis=0.75)
plot.PCA(res.acp,choix="var",1:2,col.hab=c("green","blue","red","yellow4","black","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"),lim.cos2.var = 0.7)
plot.PCA(res.acp,choix="ind",1:2,col.hab=c("green","blue","red","yellow4","aquamarine","chartreuse","blueviolet","coral","darkgreen","orchid","lightseagreen","red4","saddlebrown","plum","navy","orange","green","midnightblue","black","gray","deeppink4"))
plot.PCA(res.acp,choix="var",1:2,col.hab=c("forestgreen","blue","brown","yellow4","black","cyan2","darkgoldenrod1","deppskyblue","darkorange","firebrick1","darkorchid1","deeppink","mediumvioletred","navyblue","palegreen","salmon","green","peru","black","gray","seagreen"),lim.cos2.var = 0.7)
plot.PCA(res.acp,choix="var",1:2,col.hab=c("forestgreen","blue","brown","yellow4","black","cyan2","darkgoldenrod1","deeppskyblue","darkorange","firebrick1","darkorchid1","deeppink","mediumvioletred","navyblue","palegreen","salmon","green","peru","black","gray","seagreen"),lim.cos2.var = 0.7)
plot.PCA(res.acp,choix="var",1:2,col.hab=c("forestgreen","blue","brown","yellow4","black","cyan2","darkgoldenrod1","deepskyblue","darkorange","firebrick1","darkorchid1","deeppink","mediumvioletred","navyblue","palegreen","salmon","green","peru","black","gray","seagreen"),lim.cos2.var = 0.7)
summary(vinsacp)
summary(vinsacp$total)
plot.PCA(res.acp,choix="ind",1:2,)
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
test.aop=cor.test(prop_aop,prop_noncommerciale)
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
prod.aop=vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
prod.aop=vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose
test.aop=cor.test(prod.aop,vins$prod_noncommerciale)
test.aop
str(prod.aop)
prod.igp=vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci
test.igp=cor.test(prod.igp,vins$prod_noncommerciale)
test.igp
prod.vsig=vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose
test.vsig=cor.test(prod.vsig,vins$prod_noncommerciale)
test.vsig
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
prop.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.aop=cor.test(prop.aop,vins$prod_noncommerciale)
test.aop
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
p.vsig=vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose
test.vsig=cor.test(p.vsig,vins$prod_noncommerciale)
test.vsig
p.vsig=(vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose)/vins$total
test.vsig=cor.test(p.vsig,vins$prod_noncommerciale)
test.vsig
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vinsacp$qte_aop_blanc+vinsacp$qte_aop_rouge+vinsacp$qte_aop_rose)/vinsacp$total
test.aop=cor.test(p.aop,vinsacp$prod_noncommerciale)
test.aop
p.igp=(vinsacp$qte_igp_blanc+vinsacp$qte_igp_rouge+vinsacp$qte_igp_rose+vinsacp$qte_igp_vci)/vinsacp$total
test.igp=cor.test(p.igp,vinsacp$prod_noncommerciale)
test.igp
Call:
an<-lm(formula=total~superficie,data=vins)
an<-lm(formula=total~superficie,data=vins)
summary(an)
an<-lm(formula=total~superficie_aop*superficie_vsig*superficie_igp)
an<-lm(formula=total~superficie_aop*superficie_vsig*superficie_igp,data=vins)
summary(an)
an2<-lm(formula=total~superficie_aop+superficie_vsig)
an2<-lm(formula=total~superficie_aop+superficie_vsig,data=vins)
summary(an)
an2<-lm(formula=total~superficie_aop*superficie_vsig,data=vins)
summary(an)
#MODELISATION DE LA PRODUCTION
an<-lm(formula=total~superficie_aop*superficie_vsig*superficie_igp*cluster,data=vins)
an<-lm(formula=total~superficie_aop*superficie_vsig*superficie_igp*cluster,data=vins)
an<-lm(formula=total~superficie_aop*superficie_vsig*superficie_igp*deptclass$TPCluster$cluster,data=vins)
an<-lm(formula=vins$total~vins$superficie_aop*vins$superficie_vsig*vins$superficie_igp*deptclass$TPCluster$cluster)
#Determination du nombre optimum de clusters
fviz_nbclust(df, kmeans, method = c("silhouette", "wss", "gap_stat"))
library(factoextra)
library(NbClust)
install.packages("factoextra")
#Determination du nombre optimum de clusters
fviz_nbclust(df, kmeans, method = c("silhouette", "wss", "gap_stat"))
install.packages(NBClust)
install.packages(NbClust)
install.packages(Nbclust)
install.packages("NbClust")
#Determination du nombre optimum de clusters
fviz_nbclust(df, kmeans, method = c("silhouette", "wss", "gap_stat"))
#Clusterisation
set.seed(20)
TPCluster <- kmeans(TP_vins[1:79,2:21], 5, nstart = 100)
TPCluster
## Mise en forme
TP=vins[-81,-23]
df = scale(na.omit(TP[,-1]))
vins=read.table(file='C:/Users/Olhagaray/Desktop/AgroParisTech/2A/Projet stats/TP_vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.aop=cor.test(p.aop,vins$prod_noncommerciale)
test.aop
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
p.vsig=(vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose)/vins$total
test.vsig=cor.test(p.vsig,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/(p.aop*vins$total)
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.aop=cor.test(p.aop,vins$prod_noncommerciale)
test.aop
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
p.vsig=(vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose)/vins$total
test.vsig=cor.test(p.vsig,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=vins$qte_aop_rouge/vins$total
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.blanc=vins$qte_aop_blanc/vins$total
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.blanc=vins$qte_aop_blanc/vins$total
test.vsig=cor.test(p.aop.blanc,vins$prod_noncommerciale)
test.vsig
p.aop.rose=vins$qte_aop_rose/vins$total
test.vsig=cor.test(p.aop.rose,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=vins$qte_aop_rouge/(p.aop*vins$total)
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.blanc=vins$qte_aop_blanc/(p.aop*vins$total)
test.vsig=cor.test(p.aop.blanc,vins$prod_noncommerciale)
test.vsig
p.aop.rose=vins$qte_aop_rose/(p.aop*vins$total)
test.vsig=cor.test(p.aop.rose,vins$prod_noncommerciale)
test.vsig
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.aop=cor.test(p.aop,vins$prod_noncommerciale)
test.aop
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
p.vsig=(vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose)/vins$total
test.vsig=cor.test(p.vsig,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=vins$qte_aop_rouge/vins$total
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.blanc=vins$qte_aop_blanc/vins$total
test.vsig=cor.test(p.aop.blanc,vins$prod_noncommerciale)
test.vsig
p.aop.rose=vins$qte_aop_rose/vins$total
test.vsig=cor.test(p.aop.rose,vins$prod_noncommerciale)
test.vsig
p.aop.rouge=vins$qte_aop_rouge/vins$total
test.vsig=cor.test(p.aop.rouge,vins$prod_noncommerciale)
test.vsig
p.aop.blanc=vins$qte_aop_blanc/vins$total
test.vsig=cor.test(p.aop.blanc,vins$prod_noncommerciale)
test.vsig
p.aop.blanc=vins$qte_aop_blanc/vins$total
test.aop.blanc=cor.test(p.aop.blanc,vins$prod_noncommerciale)
test.aop.blanc
p.aop.rose=vins$qte_aop_rose/vins$total
test.aop.rose=cor.test(p.aop.rose,vins$prod_noncommerciale)
test.aop.rose
p.igp.rouge=vins$qte_igp_rouge/vins$total
test.igp.rouge=cor.test(p.igp.rouge,vins$prod_noncommerciale)
test.igp.rouge
p.igp.rose=vins$qte_igp_rose/vins$total
test.igp.rose=cor.test(p.igp.rose,vins$prod_noncommerciale)
test.igp.rose
p.igp.blanc=vins$qte_igp_blanc/vins$total
test.igp.blanc=cor.test(p.igp.blanc,vins$prod_noncommerciale)
test.igp.blanc
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
test.aop=cor.test(p.aop,vins$prod_noncommerciale)
test.aop
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,vins$prod_noncommerciale)
test.igp
p.vsig=(vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose)/vins$total
test.vsig=cor.test(p.vsig,vins$prod_noncommerciale)
test.vsig
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
p.noncom=vins$prod_noncommerciale/vins$total
test.aop=cor.test(p.aop,vins$p.noncom)
test.aop=cor.test(p.aop,p.noncom)
test.aop
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
p.aop=(vinsacp$qte_aop_blanc+vinsacp$qte_aop_rouge+vinsacp$qte_aop_rose)/vinsacp$total
p.noncom=vinsacp$prod_noncommerciale/vinsacp$total
test.aop=cor.test(p.aop,p.noncom)
test.aop
#PRODUCTION NON COMMERCIALE
#Tests des indications géographiques
vins=vins[,-81]
p.aop=(vins$qte_aop_blanc+vins$qte_aop_rouge+vins$qte_aop_rose)/vins$total
p.noncom=vins$prod_noncommerciale/vins$total
test.aop=cor.test(p.aop,p.noncom)
test.aop
p.igp=(vins$qte_igp_blanc+vins$qte_igp_rouge+vins$qte_igp_rose+vins$qte_igp_vci)/vins$total
test.igp=cor.test(p.igp,p.noncom)
test.igp
p.vsig=(vins$qte_vsig_blanc+vins$qte_vsig_rouge+vins$qte_vsig_rose)/vins$total
test.vsig=cor.test(p.vsig,p.noncom)
test.vsig
p.aop.rouge=vins$qte_aop_rouge/vins$total
test.aop.rouge=cor.test(p.aop.rouge,p.noncom)
test.aop.rouge
p.aop.blanc=vins$qte_aop_blanc/vins$total
test.aop.blanc=cor.test(p.aop.blanc,p.noncom)
test.aop.blanc
p.aop.rose=vins$qte_aop_rose/vins$total
test.aop.rose=cor.test(p.aop.rose,p.noncom)
test.aop.rose
p.vsig.rouge=vins$qte_vsig_rouge/vins$total
test.vsig.rouge=cor.test(p.vsig.rouge,p.noncom)
test.vsig.rouge
p.vsig.rose=vins$qte_vsig_rose/vins$total
test.vsig.rose=cor.test(p.vsig.rose,p.noncom)
test.igp.rose
p.vsig.blanc=vins$qte_igp_blanc/vins$total
test.vsig.blanc=cor.test(p.vsig.blanc,p.noncom)
test.igp.blanc
an<-lm(formula=vins$total~superficie,data=vins)vins
an<-lm(formula=total~superficie,data=vins)vins
an<-lm(formula=total~superficie,data=vins)
summary(an)
#Clusterisation
set.seed(20)
TPCluster <- kmeans(TP_vins[1:79,2:21], 5, nstart = 100)
TPCluster <- kmeans(vins[1:79,2:21], 5, nstart = 100)
TPCluster
an<-lm(formula=total~TPCluster,data=vins)
an<-lm(formula=total~superficie_aop+superficie_igp+superficie_vsig+superficie_cognac,data=vins)
summary(an)
an<-lm(formula=total~Cluster,data=Data_Vins)
Data_Vins=read.table(file='C:/Users/Olhagaray/Documents/GitHub/Projet-stats/Data_Vins.csv', skip=0, header=TRUE, sep = ';', row.names =1 )
an<-lm(formula=total~Cluster,data=Data_Vins)
summary(an)
total.lm=lm(total~nombre_declarations+superficie+superficie_aop+superficie_cognac+superficie_igp+superficie_vsig,data=vins)
par(mfrow=c(2,2))
plot(total.lm)
step(total.lm)
Data_Vins=read.table("Data_Vins.csv", skip=0, header=TRUE, sep = ';', row.names =1 )
setwd("~/GitHub/Projet-stats")
Data_Vins=read.table("Data_Vins.csv", skip=0, header=TRUE, sep = ';', row.names =1 )
an<-lm(formula=total~Cluster,data=Data_Vins)
an1<-lm(formula=total~1,data= Data_Vins)
anova(an,an1)
anC<-lm(formula=total~Cluster,data=Data_Vins)
an0<-lm(formula=total~1,data= Data_Vins)
anova(an,an1)
anC<-lm(formula=total~Cluster,data=Data_Vins)
an0<-lm(formula=total~1,data= Data_Vins)
anova(anC,an0)
summary(an)
total.lm=lm(total~nombre_declarations+superficie+superficie_aop+superficie_cognac+superficie_igp+superficie_vsig,data=Data_Vins)
par(mfrow=c(2,2))
plot(total.lm)
step(total.lm)
an2=lm(formula=total~nombre_declarations+superficie,data=Data_Vins)
an3=lm(formula=total~nombre_declarations+superficie_aop+superficie_igp+superficie_cognac+superficie_vsig)
anova(an2,an3)
an2=lm(formula=total~nombre_declarations+superficie,data=Data_Vins)
an3=lm(formula=total~nombre_declarations+superficie_aop+superficie_igp+superficie_cognac+superficie_vsig,data=Data_Vins)
anova(an2,an3)
